type Query {
	event(id: ID!): Event!
	events: [Event!]!
}

type Mutation {
	createEvent(data: CreateEventInput!): Event!
	updateEvent(id: ID!, data: UpdateEventInput!): Event!
	deleteEvent(id: ID!): Event!
	deleteAllEvents: DeleteAllOutput!
}

type Subscription {
	eventCreated: Event!
	eventUpdated: Event!
	eventDeleted: Event!
	eventCount: Int!
}

type Event {
	_id: ID!
	title: String!
	desc: String!
	date: String!
	from: String!
	to: String!
	location: Location!
	user: User!
	participants: [Participant!]!
}

input CreateEventInput {
	title: String!
	desc: String!
	date: String!
	from: String!
	to: String!
	location: ID!
	user: ID!
}

input UpdateEventInput {
	title: String
	desc: String
	date: String
	from: String
	to: String
	location: ID
	user: ID
}
